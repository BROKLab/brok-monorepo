{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "dev",
            "runOptions": {
                // "runOn": "folderOpen"
            },
            "dependsOrder": "parallel",
            "dependsOn": [
                "frontend",
                "graph-captable"
            ],
            "problemMatcher": []
        },
        {
            "label": "captable contracts",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm --filter @brok/captable start:contracts",
            "presentation": {
                "panel": "dedicated",
                "group": "contracts"
            },
            
            "problemMatcher": {
                "pattern": {
                    "regexp": "^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$",
                    "file": 1,
                    "location": 2,
                    "severity": 3,
                    "code": 4,
                    "message": 5
                  },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "change detected",
                    "endsPattern" : "EthereumDIDRegistry deployed"
                }
            }
        },
        {
            "label": "captable lib",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm --filter @brok/captable start:lib",
            "presentation": {
                "panel": "dedicated",
                "group": "contracts"
            },
            "dependsOn": [
                "captable contracts"
            ],
            "problemMatcher": ["$tsc-watch"],
        },
        {
            "label": "ceramic",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm ceramic daemon --debug --network inmemory",
            "presentation": {
                "panel": "dedicated",
                "group": "ceramic"
            },
            "dependsOn": [
                "captable lib"
            ],
            "problemMatcher": {
                "pattern": {
                    "regexp": "^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$",
                    "file": 1,
                    "location": 2,
                    "severity": 3,
                    "code": 4,
                    "message": 5
                  },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "Swarm listening",
                    "endsPattern" : "Ceramic API running on"
                }
            }
        },
        {
            "label": "sdk",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm --filter @brok/sdk start",
            "presentation": {
                "panel": "dedicated",
                "group": "sdk"
            },
            "dependsOn": [
                "ceramic"
            ],
            "problemMatcher": ["$tsc-watch"],
        },
        {
            "label": "server",
            "type": "shell",
            "isBackground": true,
            "command": "DEBUG=brok* pnpm --filter @brok/demo-server start:dev",
            "presentation": {
                "panel": "dedicated",
                "group": "server"
            },
            "dependsOn": [
                "sdk"
            ],
            "problemMatcher": ["$tsc-watch"],
        },
        {
            "label": "frontend",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm --filter @brok/demo-frontend start",
            "presentation": {
                "panel": "dedicated",
                "clear": true
            },
            "dependsOn": [
                "server",
            ],
            "problemMatcher": {
                "owner": "typescript",
                "pattern": [
                  {
                    "regexp": "^([^F\\(\\s].*)$",
                    "file": 1
                  },
                  {
                    "regexp": "^\\((\\d+),(\\d+)\\): (error|warning|info) (TS\\d+): (.*)$",
                    "line": 1,
                    "column": 2,
                    "severity": 3,
                    "message": 5,
                    "code": 4,
                    "loop": true
                  }
                ],
                "background": {
                  "activeOnStart": true,
                  "beginsPattern": "Compiling",
                  "endsPattern": "Compiled"
                }
              }
        },
        {
            "label": "graph-server",
            "type": "shell",
            "isBackground": true,
            "command": "make graph-stop && make graph-start",
            "presentation": {
                "panel": "dedicated",
                "group": "graph",
                "focus": true
            },
            "problemMatcher": {
                "pattern": [
                    {
                      "regexp": "^([^F\\(\\s].*)$",
                      "file": 1
                    },
                    {
                      "regexp": "^\\((\\d+),(\\d+)\\): (error|warning|info) (TS\\d+): (.*)$",
                      "line": 1,
                      "column": 2,
                      "severity": 3,
                      "message": 5,
                      "code": 4,
                      "loop": true
                    }
                  ],
                  "background": {
                    "activeOnStart": true,
                    "beginsPattern": "Apply migrations",
                    "endsPattern": "Starting GraphQL HTTP server"
                  }          
            },
        },
        {
            "label": "graph-captable",
            "type": "shell",
            "isBackground": true,
            "command": "pnpm -F @brok/graph deploy:brokLocal",
            "presentation": {
                "panel": "dedicated",
                "group": "graph",
                "focus": true
            },
            "dependsOn": [
                "graph-server"
            ],
            "problemMatcher": {
                "pattern": [
                    {
                      "regexp": "^([^F\\(\\s].*)$",
                      "file": 1
                    },
                    {
                      "regexp": "^\\((\\d+),(\\d+)\\): (error|warning|info) (TS\\d+): (.*)$",
                      "line": 1,
                      "column": 2,
                      "severity": 3,
                      "message": 5,
                      "code": 4,
                      "loop": true
                    }
                  ],
                  "background": {
                    "activeOnStart": true,
                    "beginsPattern": "Apply migrations",
                    "endsPattern": "Deployed to"
                  }          
            },
        },

    ]
}